{"ast":null,"code":"import _objectSpread from\"C:/Users/hojun/OneDrive/Programing Projects/\\uB0C9\\uC7A5\\uACE0 \\uB3C4\\uC6B0\\uBBF8 \\uD504\\uB85C\\uC81D\\uD2B8/Fridge-Up/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import'./App.css';// 백엔드 서버 주소\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='https://fridge-up.vercel.app';// 여기에 Vercel에서 복사한 백엔드 URL을 붙여넣으세요!\nfunction App(){// 상태 관리\nconst[ingredients,setIngredients]=useState([]);// 재료 목록\nconst[newIngredientName,setNewIngredientName]=useState('');// 새 재료 이름\nconst[newIngredientExpiry,setNewIngredientExpiry]=useState('');// 새 재료 소비기한\nconst[recommendation,setRecommendation]=useState('');// AI 추천 레시피\nconst[loading,setLoading]=useState(false);// 로딩 상태 (AI 추천)\nconst[error,setError]=useState(null);// 에러 메시지\n// 컴포넌트가 처음 렌더링될 때 재료 목록을 불러옴\nuseEffect(()=>{fetchIngredients();},[]);// 백엔드에서 재료 목록을 가져오는 함수\nconst fetchIngredients=async()=>{try{setError(null);const response=await fetch(\"\".concat(API_URL,\"/api/ingredients\"));if(!response.ok)throw new Error('재료를 불러오는 데 실패했습니다.');const data=await response.json();setIngredients(data);}catch(err){setError(err.message);console.error(err);}};// 새 재료를 추가하는 함수\nconst handleAddIngredient=async e=>{e.preventDefault();// 폼 제출 기본 동작 방지\nif(!newIngredientName||!newIngredientExpiry){setError('재료 이름과 소비기한을 모두 입력해주세요.');return;}const ingredientData={name:newIngredientName,expiryDate:newIngredientExpiry};console.log('서버로 보내는 데이터:',ingredientData);// [디버깅] 보내는 데이터 확인\ntry{setError(null);const response=await fetch(\"\".concat(API_URL,\"/api/ingredients\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(ingredientData)});console.log('서버 응답:',response);// [디버깅] 전체 응답 확인\nif(!response.ok){const errorData=await response.json().catch(()=>({}));// 응답 본문이 JSON이 아닐 수도 있음\nconsole.error('서버 오류 응답:',errorData);// [디버깅] 오류 내용 확인\nthrow new Error(errorData.error||'재료 추가에 실패했습니다.');}// 입력 필드 초기화 및 재료 목록 다시 불러오기\nsetNewIngredientName('');setNewIngredientExpiry('');fetchIngredients();}catch(err){setError(err.message);console.error(err);}};// 재료를 삭제하는 함수\nconst handleDeleteIngredient=async id=>{if(!window.confirm('정말로 이 재료를 삭제하시겠습니까?'))return;try{setError(null);const response=await fetch(\"\".concat(API_URL,\"/api/ingredients/\").concat(id),{method:'DELETE'});if(!response.ok)throw new Error('재료 삭제에 실패했습니다.');fetchIngredients();// 재료 목록 다시 불러오기\n}catch(err){setError(err.message);console.error(err);}};// 레시피를 추천받는 함수\nconst handleGetRecommendation=async()=>{setLoading(true);setRecommendation('');setError(null);try{const response=await fetch(\"\".concat(API_URL,\"/api/recommend\"),{method:'POST'});const data=await response.json();if(response.status!==200){throw new Error(data.recommendation||data.error||'레시피 추천에 실패했습니다.');}setRecommendation(data.recommendation);}catch(err){setError(err.message);console.error(err);}finally{setLoading(false);}};// 소비기한에 따라 재료를 정렬하고 스타일을 결정하는 로직\nconst sortedIngredients=useMemo(()=>{const today=new Date();today.setHours(0,0,0,0);// 시간은 비교에서 제외\nreturn[...ingredients].map(ing=>{const expiryDate=new Date(ing.expiryDate);const diffDays=Math.ceil((expiryDate-today)/(1000*60*60*24));let status='fresh';if(diffDays<0)status='expired';else if(diffDays<=3)status='nearing-expiry';return _objectSpread(_objectSpread({},ing),{},{status,diffDays});}).sort((a,b)=>new Date(a.expiryDate)-new Date(b.expiryDate));},[ingredients]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fridge-Up\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB0C9\\uC7A5\\uACE0 \\uC18D \\uC7AC\\uB8CC\\uB85C \\uCD5C\\uACE0\\uC758 \\uC694\\uB9AC\\uB97C \\uB9CC\\uB098\\uBCF4\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ingredient-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB0B4 \\uB0C9\\uC7A5\\uACE0\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddIngredient,className:\"ingredient-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC7AC\\uB8CC \\uC774\\uB984 (\\uC608: \\uC6B0\\uC720)\",value:newIngredientName,onChange:e=>setNewIngredientName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:newIngredientExpiry,onChange:e=>setNewIngredientExpiry(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uCD94\\uAC00\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"ingredient-list\",children:sortedIngredients.map(ing=>/*#__PURE__*/_jsxs(\"li\",{className:\"ingredient-item \".concat(ing.status),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ingredient-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:ing.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"expiry\",children:[\"\\uC18C\\uBE44\\uAE30\\uD55C: \",ing.expiryDate]}),ing.status==='expired'&&/*#__PURE__*/_jsx(\"span\",{className:\"tag expired-tag\",children:\"\\uAE30\\uD55C\\uB9CC\\uB8CC\"}),ing.status==='nearing-expiry'&&/*#__PURE__*/_jsxs(\"span\",{className:\"tag nearing-tag\",children:[\"\\uACE7 \\uB9CC\\uB8CC (\",ing.diffDays,\"\\uC77C \\uB0A8\\uC74C)\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteIngredient(ing.id),className:\"delete-btn\",children:\"\\uC0AD\\uC81C\"})]},ing.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC624\\uB298\\uC758 \\uCD94\\uCC9C \\uC694\\uB9AC\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGetRecommendation,disabled:loading||ingredients.length===0,children:loading?'레시피 찾는 중...':ingredients.length===0?'재료를 먼저 추가해주세요':'레시피 추천받기'}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"error-message\",children:[\"\\uC624\\uB958: \",error]}),recommendation&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uCD94\\uCC9C \\uB808\\uC2DC\\uD53C:\"}),/*#__PURE__*/_jsx(\"pre\",{children:recommendation})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsx","_jsx","jsxs","_jsxs","API_URL","App","ingredients","setIngredients","newIngredientName","setNewIngredientName","newIngredientExpiry","setNewIngredientExpiry","recommendation","setRecommendation","loading","setLoading","error","setError","fetchIngredients","response","fetch","concat","ok","Error","data","json","err","message","console","handleAddIngredient","e","preventDefault","ingredientData","name","expiryDate","log","method","headers","body","JSON","stringify","errorData","catch","handleDeleteIngredient","id","window","confirm","handleGetRecommendation","status","sortedIngredients","today","Date","setHours","map","ing","diffDays","Math","ceil","_objectSpread","sort","a","b","className","children","onSubmit","type","placeholder","value","onChange","target","onClick","disabled","length"],"sources":["C:/Users/hojun/OneDrive/Programing Projects/냉장고 도우미 프로젝트/Fridge-Up/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport './App.css';\n\n// 백엔드 서버 주소\nconst API_URL = 'https://fridge-up.vercel.app'; // 여기에 Vercel에서 복사한 백엔드 URL을 붙여넣으세요!\n\nfunction App() {\n  // 상태 관리\n  const [ingredients, setIngredients] = useState([]); // 재료 목록\n  const [newIngredientName, setNewIngredientName] = useState(''); // 새 재료 이름\n  const [newIngredientExpiry, setNewIngredientExpiry] = useState(''); // 새 재료 소비기한\n  const [recommendation, setRecommendation] = useState(''); // AI 추천 레시피\n  const [loading, setLoading] = useState(false); // 로딩 상태 (AI 추천)\n  const [error, setError] = useState(null); // 에러 메시지\n\n  // 컴포넌트가 처음 렌더링될 때 재료 목록을 불러옴\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  // 백엔드에서 재료 목록을 가져오는 함수\n  const fetchIngredients = async () => {\n    try {\n      setError(null);\n      const response = await fetch(`${API_URL}/api/ingredients`);\n      if (!response.ok) throw new Error('재료를 불러오는 데 실패했습니다.');\n      const data = await response.json();\n      setIngredients(data);\n    } catch (err) {\n      setError(err.message);\n      console.error(err);\n    }\n  };\n\n  // 새 재료를 추가하는 함수\n  const handleAddIngredient = async (e) => {\n    e.preventDefault(); // 폼 제출 기본 동작 방지\n    if (!newIngredientName || !newIngredientExpiry) {\n      setError('재료 이름과 소비기한을 모두 입력해주세요.');\n      return;\n    }\n\n    const ingredientData = { \n      name: newIngredientName, \n      expiryDate: newIngredientExpiry \n    };\n\n    console.log('서버로 보내는 데이터:', ingredientData); // [디버깅] 보내는 데이터 확인\n\n    try {\n      setError(null);\n      const response = await fetch(`${API_URL}/api/ingredients`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(ingredientData),\n      });\n\n      console.log('서버 응답:', response); // [디버깅] 전체 응답 확인\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({})); // 응답 본문이 JSON이 아닐 수도 있음\n        console.error('서버 오류 응답:', errorData); // [디버깅] 오류 내용 확인\n        throw new Error(errorData.error || '재료 추가에 실패했습니다.');\n      }\n      \n      // 입력 필드 초기화 및 재료 목록 다시 불러오기\n      setNewIngredientName('');\n      setNewIngredientExpiry('');\n      fetchIngredients(); \n    } catch (err) {\n      setError(err.message);\n      console.error(err);\n    }\n  };\n\n  // 재료를 삭제하는 함수\n  const handleDeleteIngredient = async (id) => {\n    if (!window.confirm('정말로 이 재료를 삭제하시겠습니까?')) return;\n    try {\n      setError(null);\n      const response = await fetch(`${API_URL}/api/ingredients/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) throw new Error('재료 삭제에 실패했습니다.');\n      fetchIngredients(); // 재료 목록 다시 불러오기\n    } catch (err) {\n      setError(err.message);\n      console.error(err);\n    }\n  };\n\n  // 레시피를 추천받는 함수\n  const handleGetRecommendation = async () => {\n    setLoading(true);\n    setRecommendation('');\n    setError(null);\n    try {\n      const response = await fetch(`${API_URL}/api/recommend`, { method: 'POST' });\n      const data = await response.json();\n      if (response.status !== 200) {\n        throw new Error(data.recommendation || data.error || '레시피 추천에 실패했습니다.');\n      }\n      setRecommendation(data.recommendation);\n    } catch (err) {\n      setError(err.message);\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 소비기한에 따라 재료를 정렬하고 스타일을 결정하는 로직\n  const sortedIngredients = useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // 시간은 비교에서 제외\n\n    return [...ingredients]\n      .map(ing => {\n        const expiryDate = new Date(ing.expiryDate);\n        const diffDays = Math.ceil((expiryDate - today) / (1000 * 60 * 60 * 24));\n        let status = 'fresh';\n        if (diffDays < 0) status = 'expired';\n        else if (diffDays <= 3) status = 'nearing-expiry';\n        return { ...ing, status, diffDays };\n      })\n      .sort((a, b) => new Date(a.expiryDate) - new Date(b.expiryDate));\n  }, [ingredients]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Fridge-Up</h1>\n        <p>냉장고 속 재료로 최고의 요리를 만나보세요!</p>\n      </header>\n      <main>\n        <div className=\"ingredient-section\">\n          <h2>내 냉장고</h2>\n          <form onSubmit={handleAddIngredient} className=\"ingredient-form\">\n            <input \n              type=\"text\" \n              placeholder=\"재료 이름 (예: 우유)\" \n              value={newIngredientName}\n              onChange={(e) => setNewIngredientName(e.target.value)}\n            />\n            <input \n              type=\"date\" \n              value={newIngredientExpiry}\n              onChange={(e) => setNewIngredientExpiry(e.target.value)}\n            />\n            <button type=\"submit\">추가</button>\n          </form>\n          <ul className=\"ingredient-list\">\n            {sortedIngredients.map(ing => (\n              <li key={ing.id} className={`ingredient-item ${ing.status}`}>\n                <div className=\"ingredient-info\">\n                  <span className=\"name\">{ing.name}</span>\n                  <span className=\"expiry\">소비기한: {ing.expiryDate}</span>\n                  {ing.status === 'expired' && <span className=\"tag expired-tag\">기한만료</span>}\n                  {ing.status === 'nearing-expiry' && <span className=\"tag nearing-tag\">곧 만료 ({ing.diffDays}일 남음)</span>}\n                </div>\n                <button onClick={() => handleDeleteIngredient(ing.id)} className=\"delete-btn\">삭제</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"recipe-section\">\n          <h2>오늘의 추천 요리</h2>\n          <button onClick={handleGetRecommendation} disabled={loading || ingredients.length === 0}>\n            {loading ? '레시피 찾는 중...' : (ingredients.length === 0 ? '재료를 먼저 추가해주세요' : '레시피 추천받기')}\n          </button>\n          {error && <p className=\"error-message\">오류: {error}</p>}\n          {recommendation && (\n            <div className=\"recommendation\">\n              <h3>추천 레시피:</h3>\n              <pre>{recommendation}</pre>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}